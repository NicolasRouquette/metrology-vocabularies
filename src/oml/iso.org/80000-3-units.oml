@dc:creator "Jet Propulsion Laboratory"
@dc:rights """Copyright 2010-2020, by the California Institute of Technology. ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged. Any commercial use must be negotiated with the Office of Technology Transfer at the California Institute of Technology. 
This software may be subject to U.S. export control laws. By accepting this software, the user agrees to comply with all applicable U.S. export laws and regulations. User has the responsibility to obtain export licenses, or other export authority as may be required before exporting such information to foreign countries or providing access to foreign persons."""
@dc:^source "ISO 80000-3:2019(en)"
@dc:^source "https://www.iso.org/obp/ui/#iso:std:iso:80000:-3:ed-2:v1:en"
@dc:^description "The ISO 80000-3 units vocabulary."
@dc:title "ISO 80000-3 Units"
vocabulary <http://iso.org/80000-3-units> with # as 80000-3-units {

	uses <http://iso.org/80000-3-instances>

	extends <http://iupac.org/metrology>

	uses <http://iso.org/80000-1>

	@dc:^source "3-1"
	aspect LengthMagnitude :> metrology:UnitaryMagnitude [
		restricts all relation metrology:hasReference to LengthUnit
	]

	concept LengthUnit :> metrology:MeasurementUnit

	concept CoherentLengthUnit :> LengthUnit, metrology:CoherentMeasurementUnit [
		restricts scalar property metrology:isDimensionlessMeasurementUnit to "false"^^xsd:boolean
	]

	concept metre :> CoherentLengthUnit, metrology:IndependentMeasurementUnit

	concept kilometre :> LengthUnit, metrology:PrefixedMeasurementUnit [
		restricts relation metrology:hasPrefix to 80000-1:kilo
		restricts relation metrology:prefixesMeasurementUnit to 80000-3-instances:metre
	]

	@dc:^source "3-5"
	aspect AngularMeasureMagnitude :> metrology:UnitaryMagnitude [
		restricts all relation metrology:hasReference to AngularMeasureUnit
	]

	concept AngularMeasureUnit :> metrology:CoherentMeasurementUnit [
		restricts scalar property metrology:isDimensionlessMeasurementUnit to "false"^^xsd:boolean
	]

	concept radian :> AngularMeasureUnit, metrology:DerivedMeasurementUnit

	relation entity Radian-Has-Metre-Numerator :> metrology:HasFactorForMeasurementUnit [
		from radian
		to metre
		forward radian-has-metre-numerator
		restricts scalar property metrology:exponent to "1/1"^^owl:rational
	]

	relation entity Radian-Has-Metre-Denominator :> metrology:HasFactorForMeasurementUnit [
		from radian
		to metre
		forward radian-has-metre-denominator
		restricts scalar property metrology:exponent to "-1/1"^^owl:rational
	]

	@dc:^source "3-9"
	aspect TimeMagnitude :> metrology:UnitaryMagnitude [
		restricts all relation metrology:hasReference to TimeUnit
	]

	concept TimeUnit :> metrology:MeasurementUnit

	concept CoherentTimeUnit :> TimeUnit, metrology:CoherentMeasurementUnit [
		restricts scalar property metrology:isDimensionlessMeasurementUnit to "false"^^xsd:boolean
	]

	concept second :> CoherentTimeUnit, metrology:IndependentMeasurementUnit

	concept millisecond :> TimeUnit, metrology:PrefixedMeasurementUnit [
		restricts relation metrology:hasPrefix to 80000-1:milli
		restricts relation metrology:prefixesMeasurementUnit to 80000-3-instances:second
	]

	concept minute :> TimeUnit, metrology:NonCoherentDerivedMeasurementUnit [
		restricts scalar property metrology:nonCoherentRelationship to "1 minute = 60 seconds"^^xsd:string
		restricts relation metrology:nonCoherentDerivedMeasurementUnitOf to 80000-3-instances:second
	]

	concept hour :> TimeUnit, metrology:NonCoherentDerivedMeasurementUnit [
		restricts scalar property metrology:nonCoherentRelationship to "1 hour = 60 minutes"
		restricts relation metrology:nonCoherentDerivedMeasurementUnitOf to 80000-3-instances:minute
	]

	@dc:^source "3-10"
	aspect VelocityMagnitude :> metrology:UnitaryMagnitude [
		restricts all relation metrology:hasReference to VelocityUnit
	]

	concept VelocityUnit :> metrology:MeasurementUnit

	concept CoherentVelocityUnit :> VelocityUnit, metrology:CoherentMeasurementUnit [
		restricts scalar property metrology:isDimensionlessMeasurementUnit to "false"^^xsd:boolean
	]

	concept metre-per-second :> CoherentVelocityUnit, metrology:DerivedMeasurementUnit

	relation entity Metre-Per-Second-Has-Metre :>  metrology:HasFactorForMeasurementUnit [
		from metre-per-second
		to metre
		forward metre-per-second-has-metre
		restricts scalar property metrology:exponent to "1/1"^^owl:rational
	]

	relation entity Metre-Per-Second-Has-Second :>  metrology:HasFactorForMeasurementUnit [
		from metre-per-second
		to second
		forward metre-per-second-has-second
		restricts scalar property metrology:exponent to "-1/1"^^owl:rational
	]

	concept kilometre-per-second :> CoherentVelocityUnit, metrology:DerivedMeasurementUnit

	relation entity Kilometre-Per-Second-Has-Kilometre :>  metrology:HasFactorForMeasurementUnit [
		from kilometre-per-second
		to kilometre
		forward kilometre-per-second-has-kilometre
		restricts scalar property metrology:exponent to "1/1"^^owl:rational
	]

	relation entity Kilometre-Per-Second-Has-Second :>  metrology:HasFactorForMeasurementUnit [
		from kilometre-per-second
		to second
		forward kilometre-per-second-has-second
		restricts scalar property metrology:exponent to "-1/1"^^owl:rational
	]

	@dc:^source "3-16"
	aspect RotationMagnitude :> metrology:UnitaryMagnitude [
		restricts all relation metrology:hasReference to RotationUnit
	]

	concept RotationUnit :> metrology:MeasurementUnit

	concept CoherentRotationUnit :> RotationUnit, metrology:CoherentMeasurementUnit [
		restricts scalar property metrology:isDimensionlessMeasurementUnit to "false"^^xsd:boolean
	]

	concept revolution :> CoherentRotationUnit, metrology:DerivedMeasurementUnit

	relation entity Revolution-Has-Radian :> metrology:HasFactorForMeasurementUnit [
		from revolution
		to radian
		forward revolution-has-radian
		restricts scalar property metrology:exponent to "1/1"^^owl:rational
	]

	@dc:^source "3-17"
	aspect FrequencyMagnitude :> metrology:UnitaryMagnitude [
		restricts all relation metrology:hasReference to FrequencyUnit
	]

	concept FrequencyUnit :> metrology:MeasurementUnit

	concept CoherentFrequencyUnit :> FrequencyUnit, metrology:CoherentMeasurementUnit [
		restricts scalar property metrology:isDimensionlessMeasurementUnit to "false"^^xsd:boolean
	]

	concept hertz :> CoherentFrequencyUnit, metrology:DerivedMeasurementUnit

	relation entity Hertz-Has-Second :> metrology:HasFactorForMeasurementUnit [
		from hertz
		to second
		forward hertz-has-second
		restricts scalar property metrology:exponent to "-1/1"^^owl:rational
	]
}