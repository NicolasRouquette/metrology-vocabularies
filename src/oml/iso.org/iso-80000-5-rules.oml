@dc:creator "Jet Propulsion Laboratory"
@dc:rights """Copyright 2010-2020, by the California Institute of Technology. ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged. Any commercial use must be negotiated with the Office of Technology Transfer at the California Institute of Technology. 
This software may be subject to U.S. export control laws. By accepting this software, the user agrees to comply with all applicable U.S. export laws and regulations. User has the responsibility to obtain export licenses, or other export authority as may be required before exporting such information to foreign countries or providing access to foreign persons."""
@dc:description "Optional consistency rules for iso-80000-5-quantities to enforce that derived quantities are about the same object as the objects of their quantity factors."
@dc:title "ISO-80000-5 Rules"
vocabulary <http://iso.org/iso-80000-5-rules> with # as iso-80000-5-rules {

	extends <http://purl.org/dc/elements/1.1> with / as dc

	extends <http://www.w3.org/2000/01/rdf-schema> as rdfs

	extends <http://iupac.org/metrology> as metrology

	extends <http://iso.org/iso-80000-5-quantities> as iso-80000-5-quantities

	@rdfs:comment "
	If a celsius-temperature, x, is derived from a thermodynamic-temperature, y,
	then x, y must be quantities of the same object."
	rule celsius-temperature-derivation-consistency [
		// x is the celsius-temperature quantity of an object, xo.
		metrology:isQuantityOf(x,xo) ^
		iso-80000-5-quantities:celsius-temperature(x) ^

		// y is the thermodynamic-temperature quantity of an object, yo.
		metrology:isQuantityOf(y,yo) ^
		iso-80000-5-quantities:thermodynamic-temperature(y) ^

		// if there is a dimensional calculus constraint relating x as a derived from y
		iso-80000-5-quantities:celsius-temperature-has-thermodynamic-temperature(x,y) 
	
		->

		// then all the quantities must be of the same object.
		sameAs(xo,yo)
	]
}