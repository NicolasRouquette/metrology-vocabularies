vocabulary <http://bipm.org/jcgm/isq3-vocabulary#> as isq3-vocabulary {

  extends <http://www.w3.org/2002/07/owl#> as owl
  extends <http://www.w3.org/2001/XMLSchema#> as xsd
  extends <http://bipm.org/jcgm/vim4a#> as vim4
  
  concept time :> vim4:GeneralUnitaryQuantity
  
  concept ^length :> vim4:GeneralUnitaryQuantity
  
  concept mass :> vim4:GeneralUnitaryQuantity
  
  concept electric-current :> vim4:GeneralUnitaryQuantity
  
  concept thermodynamic-temperature :> vim4:GeneralUnitaryQuantity
  
  concept amount-of-substance :> vim4:GeneralUnitaryQuantity
  
  concept luminous-intensity :> vim4:GeneralUnitaryQuantity
  
  concept ISQ :> vim4:SystemOfQuantities [
    restricts scalar property vim4:id to "ISQ"^^xsd:string
    restricts relation vim4:systemHasBaseUnitaryQuantity to exactly 1 time
    restricts relation vim4:systemHasBaseUnitaryQuantity to exactly 1 ^length
    restricts relation vim4:systemHasBaseUnitaryQuantity to exactly 1 mass
    restricts relation vim4:systemHasBaseUnitaryQuantity to exactly 1 electric-current
    restricts relation vim4:systemHasBaseUnitaryQuantity to exactly 1 thermodynamic-temperature
    restricts relation vim4:systemHasBaseUnitaryQuantity to exactly 1 amount-of-substance
    restricts relation vim4:systemHasBaseUnitaryQuantity to exactly 1 luminous-intensity
  ]
  
  relation entity ISQ-time :> vim4:SystemHasBaseUnitaryQuantity 
  [ from ISQ to time forward isq-time ]
  
  relation entity ISQ-length :> vim4:SystemHasBaseUnitaryQuantity 
  [ from ISQ to ^length forward isq-length ]
  
  relation entity ISQ-mass :> vim4:SystemHasBaseUnitaryQuantity 
  [ from ISQ to mass forward isq-mass ]
  
  relation entity ISQ-electric-current :> vim4:SystemHasBaseUnitaryQuantity 
  [ from ISQ to electric-current forward isq-electric-current ]
  
  relation entity ISQ-thermodynamic-temperature :> vim4:SystemHasBaseUnitaryQuantity 
  [ from ISQ to thermodynamic-temperature forward isq-thermodynamic-temperature ]
  
  relation entity ISQ-amount-of-substance :> vim4:SystemHasBaseUnitaryQuantity 
  [ from ISQ to amount-of-substance forward isq-amount-of-substance ]
  
  relation entity ISQ-luminous-intensity :> vim4:SystemHasBaseUnitaryQuantity 
  [ from ISQ to luminous-intensity forward isq-luminous-intensity ]
  
  concept volume :> vim4:GeneralUnitaryQuantity
  
  relation entity ISQ-volume :> vim4:SystemHasDerivedUnitaryQuantity 
  [ from ISQ to volume forward isq-volume ]
  
  relation entity ISQ-volume-length :> vim4:HasPowerOfUnitaryQuantityFactor 
  [ from ISQ-volume to ISQ-length forward isq-volume-length
    restricts scalar property vim4:exponent to "3/1"^^owl:rational ]
}